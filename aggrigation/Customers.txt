1. Find the total amount spent by each customer.
db.Orders.aggregate([ { $group: { _id:"$customerId", totalAmount: { $sum : "$amount"}}}])

2. Retrieve order details along with corresponding customer information.
db.Orders.aggregate([{$lookup: { from: "Customers", localField: "customerId", foreignField:"_id", as: "customerInfo"}}, { $unwind: "$customerInfo"}])

3. Find orders where the amount is greater than Rs. 500.
db.Orders.aggregate([{ $project: { amount: 1, amoutMoreFiveHundred: { $gte: [ "$amount", 500]}}}])

4. Calculate the average order amount per customer
db.Orders.aggregate([ { $group: { _id: "$customerId", averageOrderAmount: { $avg: "$amount"}}}])

5. Retrieve all orders with customer details, ensuring each order has an associated customer record.
db.Orders.aggregate([ {$lookup: { from: "Customers", localField: "customerId", foreignField: "_id", as: "customerInfo"}}, { $match: { customerInfo: { $ne : []}}}, { $unwind: "$customerInfo"}])


















